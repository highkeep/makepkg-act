name: matrix

on:
  workflow_dispatch:
    inputs:
      repoUrl:
        description: "GIT repository: https://aur.archlinux.org/<SomePkg>.git"
        required: true
        type: string
      repoPkg:
        description: "Package's name: <SomePkg>"
          # The name of the package: <SomePkg>
          # For SVN use the path after trunk/: <dir>/<SomePkg>
        required: true
        type: string
      makepkgArgs:
        description: "Add additional arguments to makepkg."
        type: string
      multilib:
        description: "Add multilib"
        # description: "Enable if desired or if <SomePkg> requires it."
        type: boolean
        default: false
      nvidiaUtils:
        description: "Add nvidia-utils and lib32-nvidia-utils"
        # description: "Enable if desired or if <SomePkg> requires it."
        type: boolean
        default: false
      svnTarget:
        description: "Clone <SomePkg> with svn"
        # description: "Enable if <SomePkg> requires SVN."
        type: boolean
        default: false
      art:
        description: "JSON combined architecture and repoTag"
        required: true
        type: string
        default: '[{"architecture":"alderlake", "repoTag":"alderlake"},{"architecture":"generic", "repoTag":"generic_x86_64"}]'
      upload:
        description: "Upload built package"
        # description: "Disable for testing build process."
        type: boolean
        default: true
      commit:
        description: "Commit version changes"
        # description: "Disable for testing build process."
        type: boolean
        default: true 
 
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      art: ${{ steps.set-matrix.outputs.art }}
    steps:
      - id: set-matrix
        run: |
          echo "art={\"include\":$art}" >> $GITHUB_OUTPUT
        env:
          art: ${{ github.event.inputs.art }}
  process:
    needs: setup
    strategy:
      matrix: ${{fromJson(needs.setup.outputs.art)}}
    uses: highkeep/pkgbuilder/.github/workflows/test.yml@matrix
    with:
      repoURL: ${{ github.event.inputs.repoUrl }}
      repoPkg: ${{ github.event.inputs.repoPkg }}
      makepkgArgs: ${{ github.event.inputs.makepkgArgs }}
      multilib: ${{ inputs.multilib }}
      nvidiaUtils: ${{ inputs.nvidiaUtils }}
      svnTarget: ${{ inputs.svnTarget }}
      architecture: ${{ matrix.architecture }}
      repoTag: ${{ matrix.repoTag }}
      upload: ${{ inputs.upload }}
      commit: ${{ inputs.commit }}

name: build

on:
  workflow_dispatch:
    inputs:
      repoUrl:
        required: true
        type: string
      repoPkg:
        required: true
        type: string
      makepkgArgs:
        type: string
      multilib:
        type: boolean
        default: false
      nvidiaUtils:
        type: boolean
        default: false
      arch:
        type: string
        default: alderlake
      svn:
        type: boolean
        default: false

jobs:
  package: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Clone Package
        id: pkg
        uses: highkeep/clone-action@main
        with:
          repoUrl: ${{ inputs.repoUrl }}
          repoPkg: ${{ inputs.repoPkg }}
          scn: ${{ inputs.svn }}
        # run: |
        #   git -v
        #   # if ${{ inputs.git_svn }}; then
        #   #   git svn clone ${{ inputs.repo_url }} --trunk=trunk/${{ inputs.repo_pkg }} $(basename ${{ inputs.repo_pkg }})
        #   #   echo "repo_pkg=$(basename ${{ inputs.repo_pkg }})" >> $GITHUB_OUTPUT
        #   # else
        #   #   git clone ${{ inputs.repo_url }}/${{ inputs.repo_pkg }}.git
        #   #   echo "repo_pkg=${{ inputs.repo_pkg }}" >> $GITHUB_OUTPUT
        #   # fi
      # - name: echo pkg 
      #   run: |
      #     echo ${{ steps.pkg.output }}
      # - name: Set PKGBUILD architecture 
      #   run: |
      #     if [[ ${{ inputs.arch }} != 'generic_x86_64' ]]; then
      #       source functions.sh && setArch ${{ inputs.arch }} ${{ inputs.repo_pkg }}/PKGBUILD
      #     fi
      #     cat ${{ inputs.repo_pkg }}/PKGBUILD
      # - name: Makepkg Build and Check
      #   id: makepkg
      #   uses: highkeep/pkgbuild-action@master
      #   with:
      #     pkgdir: ${{ inputs.repo_pkg }}
      #     pacmanConf: "configs/${{ inputs.arch }}_pacman.conf"
      #     makepkgConf: "configs/${{ inputs.arch }}_makepkg.conf"
      #     makepkgArgs: ${{ inputs.makepkgArgs }}
      #     multilib: ${{ inputs.multilib }}
      #     nvidiaUtils: ${{ inputs.nvidiaUtils }}
name: build

on:
  workflow_call:
    inputs:
      # Clone Action
      repoUrl:
        required: true
        type: string
      repoPkg:
        required: true
        type: string
      svnTarget:
        type: boolean
        default: false
      # Architecture Action
      architecture:
        type: string
      tplPacmanConf:
        type: string
      tplMakepkgConf:
        type: string
      confOutDir:
        type: string
      repoTag:
        type: string
      repoTagKey:
        type: string
      repoServer:
        type: string
      repoServerKey:
        type: string
      pkg:
        type: string
      updatePkg:
        type: boolean
        default: false
      # # Build Action
      makepkgArgs:
        type: string
      multilib:
        type: boolean
        default: false
      nvidiaUtils:
        type: boolean
        default: false
      # # Upload Action
      upload:
        type: boolean
        default: true
      commit:
        type: boolean
        default: true 
  workflow_dispatch:
    inputs:
      # Clone Action
      repoUrl:
        required: true
        type: string
      repoPkg:
        required: true
        type: string
      svnTarget:
        type: boolean
        default: false
      # Architecture Action
      architecture:
        type: string
      repoTag:
        type: string
      makepkgArgs:
        type: string
      multilib:
        type: boolean
        default: false
      nvidiaUtils:
        type: boolean
        default: false
      # Upload Action
      upload:
        type: boolean
        default: true
      commit:
        type: boolean
        default: true 

jobs:
  package: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Clone Package
        id: clone
        uses: highkeep/pkgbuild_clone-action@main
        with:
          repoUrl: ${{ github.event.inputs.repoUrl }}
          repoPkg: ${{ github.event.inputs.repoPkg }}
          svnTarget: ${{ github.event.inputs.svnTarget }}
      - name: Check version
        id: version
        uses: highkeep/pkgbuild_version-action@main
        with:
          repoTag: ${{ github.event.inputs.repoTag }}
          pkg: ${{ steps.clone.outputs.pkg }}
          pkgRef: ${{ steps.clone.outputs.pkgRef }}
      - name: Setup Architecture
        if: ${{ steps.version.outputs.updatePkg == 'true' }}
        id: architecture
        uses: highkeep/pkgbuild_architecture-action@main
        with:
          architecture: ${{ github.event.inputs.architecture }}
          tplPacmanConf: ${{ github.event.inputs.tplPacmanConf }}
          tplMakepkgConf: ${{ github.event.inputs.tplPacmanConf }}
          confOutDir: ${{ github.event.inputs.confOutDir }}
          repoTag: ${{ github.event.inputs.repoTag }}
          repoTagKey: ${{ github.event.inputs.repoTagKey }}
          repoServer: ${{ github.event.inputs.repoServer }}
          repoServerKey: ${{ github.event.inputs.repoServerKey }}
          pkg: ${{ steps.clone.outputs.pkg }}
          updatePkg: ${{ github.event.inputs.updatePkg }}
      - name: Makepkg Build and Check
        if: ${{ steps.version.outputs.updatePkg == 'true' }}
        id: makepkg
        uses: highkeep/pkgbuild-action@master
        with:
          pkgdir: ${{ steps.clone.outputs.pkg }}
          pacmanConf: ${{ steps.architecture.outputs.pacmanConf }}
          makepkgConf: ${{ steps.architecture.outputs.makepkgConf }}
          makepkgArgs: ${{ github.event.inputs.makepkgArgs }}
          multilib: ${{ github.event.inputs.multilib }}
          nvidiaUtils: ${{ github.event.inputs.nvidiaUtils }}
          repoReleaseTag: ${{ steps.architecture.outputs.repoTag }}
      - name: Print Package Files
        if: ${{ steps.version.outputs.updatePkg && github.event.inputs.upload == 'true' }}
        run: |
          echo "Successfully created the following package archive"
          echo "Package: ${{ steps.makepkg.outputs.pkgfile0 }}"
          echo "Package: ${{ steps.makepkg.outputs.repofile0 }}"
          echo "Package: ${{ steps.makepkg.outputs.repofile1 }}"
          echo "Package: ${{ steps.makepkg.outputs.repofile2 }}"
          echo "Package: ${{ steps.makepkg.outputs.repofile3 }}"
      - uses: svenstaro/upload-release-action@v2
        if: ${{ steps.version.outputs.updatePkg && github.event.inputs.upload == 'true' }}
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          tag: ${{ steps.architecture.outputs.repoTag }}
          file: ${{ steps.makepkg.outputs.pkgfile0 }}
          overwrite: true
      - uses: svenstaro/upload-release-action@v2
        if: ${{ steps.version.outputs.updatePkg && github.event.inputs.upload == 'true' }}
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          tag: ${{ steps.architecture.outputs.repoTag }}
          file: ${{ steps.makepkg.outputs.repofile0 }}
          overwrite: true
      - uses: svenstaro/upload-release-action@v2
        if: ${{ steps.version.outputs.updatePkg && github.event.inputs.upload == 'true' }}
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          tag: ${{ steps.architecture.outputs.repoTag }}
          file: ${{ steps.makepkg.outputs.repofile1 }}
          overwrite: true
      - uses: svenstaro/upload-release-action@v2
        if: ${{ steps.version.outputs.updatePkg && github.event.inputs.upload == 'true' }}
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          tag: ${{ steps.architecture.outputs.repoTag }}
          file: ${{ steps.makepkg.outputs.repofile2 }}
          overwrite: true
      - uses: svenstaro/upload-release-action@v2
        if: ${{ steps.version.outputs.updatePkg && github.event.inputs.upload == 'true' }}
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          tag: ${{ steps.architecture.outputs.repoTag }}
          file: ${{ steps.makepkg.outputs.repofile3 }}
          overwrite: true
      - name: git status
        run: |
          git status
      - name: Add & Commit
        if: ${{ steps.version.outputs.updatePkg && github.event.inputs.commit == 'true' }}
        uses: EndBug/add-and-commit@v9.1.1
        with:
          add: ${{ steps.version.outputs.refFile }}
          fetch: true
          pull: --rebase --autostash